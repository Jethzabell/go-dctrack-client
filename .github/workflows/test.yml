name: Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.21, 1.22]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      id: setup-go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Clean Go module and build cache
      run: |
        rm -rf ~/go/pkg/mod
        rm -rf ~/.cache/go-build

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}-go${{ steps.setup-go.outputs.go-version }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Build
      run: go build -v ./...

    - name: Run vet
      run: go vet ./...

    - name: Run tests
      run: go test -race -coverprofile=coverage.out -covermode=atomic -v ./...

    - name: Run tests with short flag
      run: go test -short -v ./...

    - name: Build CLI
      run: go build -v ./cmd/dctrackcheck

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      id: setup-go
      uses: actions/setup-go@v4
      with:
        go-version: 1.22

    - name: Clean Go module and build cache
      run: |
        rm -rf ~/go/pkg/mod
        rm -rf ~/.cache/go-build

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}-go${{ steps.setup-go.outputs.go-version }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: v1.54

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v4
      with:
        go-version: 1.22
    - name: Run Gosec Security Scanner
      uses: securego/gosec@master
      with:
        args: -no-fail -fmt sarif -out results.sarif ./...

  build-cli:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v4
      with:
        go-version: 1.22
    - name: Build CLI for multiple platforms
      run: |
        GOOS=linux GOARCH=amd64 go build -o bin/dctrackcheck-linux-amd64 ./cmd/dctrackcheck
        GOOS=darwin GOARCH=amd64 go build -o bin/dctrackcheck-darwin-amd64 ./cmd/dctrackcheck
        GOOS=windows GOARCH=amd64 go build -o bin/dctrackcheck-windows-amd64.exe ./cmd/dctrackcheck
    - name: Upload CLI artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dctrackcheck-binaries
        path: bin/
